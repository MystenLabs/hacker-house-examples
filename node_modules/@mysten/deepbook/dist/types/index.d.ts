import { EventId } from '@mysten/sui.js/src/client';
export * from './bcs';
export interface PoolSummary {
    poolId: string;
    baseAsset: string;
    quoteAsset: string;
}
/**
 * `next_cursor` points to the last item in the page; Reading with `next_cursor` will start from the
 * next item after `next_cursor` if `next_cursor` is `Some`, otherwise it will start from the first
 * item.
 */
export interface PaginatedPoolSummary {
    data: PoolSummary[];
    hasNextPage: boolean;
    nextCursor?: EventId | null;
}
export interface UserPosition {
    availableBaseAmount: bigint;
    lockedBaseAmount: bigint;
    availableQuoteAmount: bigint;
    lockedQuoteAmount: bigint;
}
export declare enum LimitOrderType {
    NO_RESTRICTION = 0,
    IMMEDIATE_OR_CANCEL = 1,
    FILL_OR_KILL = 2,
    POST_OR_ABORT = 3
}
export declare enum SelfMatchingPreventionStyle {
    CANCEL_OLDEST = 0
}
export interface Order {
    orderId: string;
    clientOrderId: string;
    price: string;
    originalQuantity: string;
    quantity: string;
    isBid: boolean;
    owner: string;
    expireTimestamp: string;
    selfMatchingPrevention: SelfMatchingPreventionStyle;
}
export interface MarketPrice {
    bestBidPrice: bigint | undefined;
    bestAskPrice: bigint | undefined;
}
export interface Level2BookStatusPoint {
    price: bigint;
    depth: bigint;
}
